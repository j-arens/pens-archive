/**********************************
* Base
**********************************/

@import url('https://fonts.googleapis.com/css?family=Roboto:400,500');

* {
    box-sizing: border-box;
    
    &::before,
    &::after {
        box-sizing: inherit;
    }
}

html,
body {
    min-height: 100vh;
}

body {
    display: flex;
    justify-content: center;
    align-items: center;
    font-family: 'Roboto', sans-serif;
    background-color: #191818;
}

/**********************************
* Vars
**********************************/

:root {
    --color_mine_shaft: #252525;
    --color_tundora: #4D4D4D;
    --color_silver_chalice: #B0AFAF;
    --color_white: #fff;
    --color_mercury: #e8e8e8;
    --color_alice_blue: #f0f8ff;
}

$columns: (
    1: (
        keyframes: (0 0.3, 60 0.7, 80 0.1, 100 1),
        duration: 1.25,
        cap: 200,
    ),
    2: (
        keyframes: (0 0.1, 20 0.5, 90 1, 100 0.6),
        duration: 1,
        cap: 300,
    ),
    3: (
        keyframes: (18 0.8, 60 0.3, 90 1),
        duration: 0.5,
        cap: 40,
    ),
    4: (
        keyframes: (0 0.1, 20 0.8, 90 1, 100 0.6),
        duration: 0.6,
        cap: 300,
    ),
    5: (
        keyframes: (19 0.5, 79 0.8, 87 0.9),
        duration: 0.6,
        cap: 100,
    ),
    6: (
        keyframes: (46 0.3, 69 0.8, 75 0.5, 100 0.2),
        duration: 1.1,
        cap: 40,
    ),
);

/**********************************
* Root Container
**********************************/

.melody__root,
#melody__root {
    position: relative;
    // min-height: 410px;
    // max-width: 350px;
    height: 410px;
    width: 350px;
    border-radius: 5px;
    background-color: var(--color_mine_shaft);
    color: var(--color_white);
    font-weight: 500;
    box-shadow: 1px 1px 11px 0 rgba(0, 0, 0, 0.3);
    overflow: hidden;
    user-select: none !important; // unfortunately user select messes up mouseevents used for dragging
    * {
        user-select: inherit !important;
    }
}

/**********************************
* Melody Component
**********************************/

.melody__ {
    &component {
        height: 100%;
        
        &--fetching {
            display: none;
        }
        
        &--isDragging {
            cursor: move;
        }
    }
    
    &preview {
        position: relative;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        min-height: 300px;
        padding: 30px;
        box-shadow: 0px 1px 11px 1px rgba(0, 0, 0, 0.2);
    }
    
    &artwork {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-size: cover;
        background-repeat: no-repeat;
        // filter: brightness(30%) grayscale(50%);
        filter: brightness(50%) grayscale(20%);
        transition: background-image 0.2s ease;
        background-color: #000;
    }
    
    &previewHeader {
        position: relative;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    
    &previewFooter {
        position: relative;
        display: flex;
        justify-content: space-between;
    }
    
    &time {
        text-shadow: 0 0 60px #000;
    }
    
    &volume {
        position: relative;
        
        .melody__icon {
            max-width: 21px;
            width: 100%;
            height: 100%;
            fill: var(--color_white);
            overflow: visible;
        }
        
        circle {
            fill: transparent;
            stroke-width: 1px;
            stroke: var(--color_white);
            stroke-dasharray: 75;
            stroke-linecap: round;
            transform-origin: center center;
            transform: scale(1.5) rotate(90deg);
            transition: opacity .15s ease;
        }
        
        @media screen and (min-width: 1025px) {
            circle {
                opacity: 0;    
            }
            
            &:hover,
            &:active {
                circle {
                    opacity: 1;
                }
            }
        }
    }
    
    &component:not(&component--isDragging) {
        .melody__volume {
            cursor: ns-resize;
        }
    }
    
    &marquee {
        position: relative;
        text-align: center;
    }
    
    &controlBar {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 30px;
    }
    
    &overlay {
        display: none;
    }
    
    &btn {
        border: none;
        background: transparent;
        cursor: pointer;
        padding: 0;
        
        &:focus {
            outline: 0;
        }
        
        &:active {
            transform: scale(0.95);
        }
    }
    
    &favCtrl {
        .melody__icon {
            max-width: 20px;
            width: 100%;
            height: 100%;
            fill: transparent;
            stroke: var(--color_white);
            stroke-width: 2px;
            overflow: visible;
            
            path:last-child {
                opacity: 0;
            }
        }
        
        &--active {
            .melody__icon {
                fill: red;
                
                path:last-child {
                transform-origin: center center;
                fill: red;
                stroke: transparent;
                stroke-width: 0;
                }
            }
        }
        
        &--ghost {
            path:last-child {
                animation: ghost .5s ease;
            }
        }
    }
    
    &title,
    &body {
        letter-spacing: 0.02em;
        text-shadow: 0 0 10px rgba(0, 0, 0, 0.4);
    }
    
    &title {
        font-size: 24px;
        margin-bottom: 0.7em;
    }
    
    &body {
        font-size: 16px;
        color: var(--color_mercury);
    }
    
    &glider {
        position: relative;
        margin-bottom: -2em;
    }
    
    &glider__playback {
        display: flex;
        align-items: center;
        height: 16px;
        padding: 0 14px 0 0;
        overflow: hidden;
    }
    
    &glider__trackbar {
        position: relative;
        background-color: var(--color_white);
        margin-left: 0;
        background-color: transparent;
        
        &--transition {
            transition: margin 1s linear;
        }
        
        &::before,
        &::after {
            content: '';
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            height: 5px;
            width: 9999px;
        }
        
        &::before {
            right: 0;
            background-color: var(--color_white);
        }
        
        &::after {
            left: 100%;
            background-color: var(--color_silver_chalice);
        }
    }
    
    &glider__handle {
        position: relative;
        z-index: 1;
        padding: 7px;
        border-radius: 50%;
        box-shadow: 2px 0px 2px 1px rgba(0, 0, 0, 0.2);
        background-color: var(--color_white);
    }
    
    &playbackCtrl {
        .melody__icon {
            max-width: 30px;
            width: 100%;
            height: 100%;
            fill: var(--color_tundora);
        }
        
        &--active {
            .melody__icon {
                fill: var(--color_white);
            }
        }
        
        &--cc {
            border-radius: 50%;
            border: 2px solid var(--color_tundora);
            padding: 7px 10px;

            .melody__icon {
                fill: var(--color_silver_chalice);
            }
        }
        
        @media screen and (min-width: 1025px) {
            &:hover {
                .melody__icon {
                    fill: var(--color_silver_chalice);
                }
            }
            
            &--active {
                &:hover {
                    .melody__icon {
                        fill: var(--color_white);
                    }
                }
            }
            
            &--cc {
                &:hover {
                    .melody__icon {
                        fill: var(--color_white);
                    }
                }
            }
        }
    }
    
    &buffer {
        circle {
            fill: var(--color_white);
            transform-origin: center center;
            animation-name: buffer;
            animation-timing-function: ease;
            animation-iteration-count: infinite;
            animation-fill-mode: forwards;
            animation-direction: reverse;
            animation-duration: 1.25s;
            opacity: 0;
            transform: scale(0.8);
            
            &:first-of-type {
                animation-delay: 0.25s;
            }
            
            &:nth-of-type(2) {
                animation-delay: 0.5s;
            }
            
            &:last-of-type {
                animation-delay: 0.75s;
            }
        }
    }
    
    &loader {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        height: 100%;
    }
    
    &loaderIcon {
        width: 3em;
        height: 3em;
        fill: var(--color_tundora);
        
        rect {
            transform-origin: bottom center;
        }
        
        @each $number, $settings in $columns {
            &__c#{$number} {
                rect:first-child {
                    animation: 
                        c#{$number}-cap
                        #{map-get($settings, duration)}s
                        ease
                        0s
                        infinite
                        alternate;
                }
                rect:last-child {
                    animation: 
                        c#{$number}
                        #{map-get($settings, duration)}s
                        ease
                        0s
                        infinite
                        alternate;
                }
            }
        }
    }

    &errorContainer {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-between;
        height: 50%;
        margin-top: 25%;
        
        .melody__icon {
            width: 75px;
            height: 75px;
            fill: var(--color_tundora);
        }
    }

    &reloadBtn {
        color: var(--color_silver_chalice);
        border: 1px solid var(--color_silver_chalice);
        padding: 1em 1.5em;
        border-radius: 5px;
    }
}

/**********************************
* Keyframe Animations
**********************************/

@each $number, $settings in $columns {
    @keyframes c#{$number} {
        @each $frame in map-get($settings, keyframes) {
            #{nth($frame, 1)}% {
                transform: scaleY(#{nth($frame, 2)});
            }
        }
    }
    
    @keyframes c#{$number}-cap {
        from {
            transform: translateY(#{map-get($settings, cap) + '%'});
        }    
    }
}

@keyframes buffer {
    0% {
        transform: scale(0);
        opacity: 0;
    }
    
    50% {
        opacity: 0;
    }
    
    100% {
        transform: scale(0.8);
        opacity: 0.5;
    }
}

@keyframes ghost {
    from {
        transform: scale(0);
        opacity: 0.65;
    }
    to {
        transform: scale(3);
        opacity: 0;
    }
}
